plugins {
    id 'org.springframework.boot' version '2.0.0.RELEASE'
    id "org.flywaydb.flyway" version "5.0.7"
}

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'pmd'
apply plugin: 'checkstyle'

ext {
    hibernateVersion = '5.1.1.Final'
    assertJVersion = "3.9.0"
    jacksonVersion = "2.9.3"
    flapdoodleVersion = "2.0.1"
}

repositories {
    jcenter()
    mavenCentral()
}
// for thymeleaf 3
project.ext["thymeleaf.version"] = "3.0.9.RELEASE"
project.ext["thymeleaf-layout-dialect.version"] = "2.2.2"

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // spring boot
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    //compile("org.springframework.boot:spring-boot-devtools")

    // database
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile("org.hibernate:hibernate-java8:${hibernateVersion}")
    runtime('com.h2database:h2')
    runtime('mysql:mysql-connector-java')

    // view : thymeleaf, angularjs, json
    compile('org.thymeleaf.extras:thymeleaf-extras-java8time')
    compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
    compile("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}")
    runtime("org.webjars:webjars-locator:0.30")
    runtime("org.webjars:angularjs:1.6.1")
    runtime("org.webjars:bootstrap:3.3.7")

    compile('org.projectlombok:lombok')

    // test
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("org.springframework.security:spring-security-test")
    testCompile("org.assertj:assertj-core:${assertJVersion}")
    testCompile("de.flapdoodle.embed:de.flapdoodle.embed.mongo:${flapdoodleVersion}")
}

bootRun {
    sourceResources sourceSets.main
}

flyway {
    url = 'jdbc:h2:file:./target/cafe'
}

jacoco {
    toolVersion = "0.8.0"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/CafeApplication.class',
                              '**/**Id.class',
                              '**/**Form.class'])
        })
    }
}

//tasks.withType(JavaCompile) {
//    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
//}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

checkstyle {
    toolVersion = '8.7'
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5.1'
}