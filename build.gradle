buildscript {
	repositories {
		jcenter()
		mavenCentral()
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'http://repo.spring.io/milestone' }
	}
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.0.0.M5'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
    }
}

plugins {
    id "org.flywaydb.flyway" version "4.1.2"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'jacoco'
apply plugin: 'pmd'
apply plugin: 'checkstyle'

ext {
    hibernateVersion = '5.1.1.Final'
    junit4Version        = '4.12'
    junitVintageVersion  = '4.12.1'
    junitJupiterVersion  = '5.0.1'
}

repositories {
    jcenter()
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    // spring boot
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-devtools")

    // database
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile("org.hibernate:hibernate-java8:${hibernateVersion}")
    compile("org.flywaydb:flyway-core:4.1.2")
    runtime('com.h2database:h2')
    runtime('mysql:mysql-connector-java')


    // view : thymeleaf, angularjs, json
    compile('org.thymeleaf.extras:thymeleaf-extras-java8time')
    compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
    compile("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect")
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.6')
    runtime("org.webjars:webjars-locator:0.30")
    runtime("org.webjars:angularjs:1.6.1")
    runtime("org.webjars:bootstrap:3.3.7")

    compile('org.projectlombok:lombok')

    // test
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test:4.2.1.RELEASE')
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testCompile('org.assertj:assertj-core:3.6.2')
    testRuntime("org.junit.platform:junit-platform-launcher:1.0.1")
    // for Junit4 Compatible
    testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")
    testCompile("de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.0.0")
    // To avoid compiler warnings about @API annotations in JUnit code
    compileOnly('org.apiguardian:apiguardian-api:1.0.0')
    testCompileOnly('org.apiguardian:apiguardian-api:1.0.0')
}

//bootRun {
//    addResources = true
//}

junitPlatform {
    platformVersion '1.0.0'
    logManager 'org.apache.logging.log4j.jul.LogManager'
}

flyway {
    url = 'jdbc:h2:file:./target/cafe'
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/CafeApplication.class',
                              '**/**Id.class',
                              '**/**Form.class'])
        })
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

checkstyle {
    toolVersion = '7.6'
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet resources.text.fromFile('config/xsl/checkstyle-noframes-sorted.xsl')
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
}